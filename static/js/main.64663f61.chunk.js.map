{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","i","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64663f61.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/storage';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const [error, setError] = useState('');\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        name='email'\r\n        type='text'\r\n        placeholder='Email'\r\n        required\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        name='password'\r\n        type='password'\r\n        placeholder='Password'\r\n        required\r\n        value={password}\r\n        onChange={onChange}\r\n      />\r\n      <input type='submit' value={newAccount ? 'Create Account' : 'Sign In'} />\r\n      {error}\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name='google'>\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name='github'>\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== '') {\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type='text'\r\n              placeholder='Edit your nweet'\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type='submit' value='Update Nweet' />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width='50px' height='50px' />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, 'data_url');\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection('nweets').add(nweetObj);\r\n    setNweet('');\r\n    setAttachment('');\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(null);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type='text'\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input type='file' accept='image/*' onChange={onFileChange} />\r\n      <input type='submit' value='Nweet' />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width='50px' height='50px' />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection('nweets').onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type='text'\r\n          placeholder='Display name'\r\n          value={newDisplayName}\r\n        />\r\n        <input type='submit' value='Update Profile' />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to='/'>Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/profile'>{userObj.displayName}의 Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path='/'>\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path='/profile'>\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path='/'>\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        'Initializing...'\r\n      )}\r\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}